<!DOCTYPE html>
<html>

<head>
	<title>Code2Inv | Features</title>
	<%- include('../partial/includes.ejs') %>
	<script src="js/features.js"></script>
	<link rel="stylesheet" type="text/css" media="screen" href="css/features.css" />

</head>

<body>
	<%- include('../partial/navbar.ejs') %>

	<div class="container">
        <div class="row">
            <div class="col-lg-12">
                <h1>Features of Code2Inv</h1>
                <hr>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-12">
                <h3>Transferability</h3>
                Code2Inv learns a neural policy for each benchmark while learning its invariant.
                The neural policy learned depends on the graph structure of the program including
                components like variables, constants, control flow, data flow and others.
                As such, this learned neural policy can be used to accelerate the search for
                invariants in other similar programs.
            </div>
        </div>
        <div class="row">
            <div class="col-lg-12">
                <h3>Flexibility</h3>
                Code2Inv is built to be flexible. We demonstrate the ability of Code2Inv to learn
                invariants for C programs as well as act as a CHC solver, both using the same
                general framework but with different front-ends.
                We also demonstrate the ability of Code2Inv to solve non-linear CHC tasks by simply
                changing the grammar of the expected invariant.
                We describe the general process involved in customizing Code2Inv in the
                <a href="https://github.com/PL-ML/code2inv/blob/master/customizing.md"
                target="_blank">customizing.md</a> file in our GitHub repository.
            </div>
        </div>
        <div class="row">
            <div class="col-lg-12">
                <h3>Naturalness</h3>
                Solutions discovered by Code2Inv tend to be more natural and more easily
                understandable, which allows people to more easily use Code2Inv.
                The naturalness does depend on the grammar of the invariant.
            </div>
        </div>
    </div>
</body>